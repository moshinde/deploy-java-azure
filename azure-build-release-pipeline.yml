trigger:
  branches:
    include:
      - master

pool:
  vmImage: 'ubuntu-18.04'

variables:
  vmImageName: 'ubuntu-18.04'

stages:
  - stage: Build
    displayName: Build deploy-java-azure service
    jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: $(vmImageName)
        steps:
        - task: Maven@3
          displayName: 'Run maven install'
          inputs:
            goals: 'clean install'
            options: '-DpackageVersion="$(Build.BuildNumber)" -DskipTests'
            publishJUnitResults: false

        - task: CopyFiles@2
          displayName: 'Copy deploy file'
          inputs:
            SourceFolder: '$(Build.SourcesDirectory)'
            Contents: '*.sh'
            TargetFolder: '$(Build.ArtifactStagingDirectory)'

        - task: CopyFiles@2
          displayName: 'Copy jar file'
          inputs:
            SourceFolder: '$(Build.SourcesDirectory)/target'
            Contents: '*.jar'
            TargetFolder: '$(Build.ArtifactStagingDirectory)'

        - task: PublishPipelineArtifact@1
          displayName: 'Publish Pipeline Artifact'
          inputs:
            targetPath: '$(Build.ArtifactStagingDirectory)'
            artifact: 'get-Host-API'

  - stage: DeployDEV
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    dependsOn: Build
    displayName: Deployment to DEV
    jobs:
    - deployment: VMDeploy
      displayName: DEV
      environment:
        name:  DEV-deploy-java-azure
        resourceType: VirtualMachine
      strategy:
        runOnce:
          deploy:
            steps:
            - script: echo my first deployment